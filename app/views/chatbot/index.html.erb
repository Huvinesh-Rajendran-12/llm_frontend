<!-- app/views/chatbot/index.html.erb -->
<div class="min-h-screen bg-gradient-to-br from-teal-400 to-teal-600 flex flex-col p-4">
  <h1 class="text-4xl font-bold text-white mb-6 text-center">LLM Chatbot</h1>
  <div id="chat-container" class="flex-grow bg-white bg-opacity-10 backdrop-blur-lg rounded-lg shadow-xl p-4 flex flex-col">
    <div id="chat-messages" class="flex-grow space-y-4 overflow-y-auto mb-4"></div>
    <%= form_with(url: send_message_path, method: :post, data: { remote: true }, class: "flex items-center space-x-2") do |f| %>
      <%= f.text_field :message, placeholder: "Ask a question...", class: "flex-grow p-3 rounded-full bg-white bg-opacity-20 text-white placeholder-teal-200 focus:outline-none focus:ring-2 focus:ring-white" %>
      <%= f.button type: "submit", class: "p-3 rounded-full bg-teal-500 text-white hover:bg-teal-400 focus:outline-none focus:ring-2 focus:ring-white" do %>
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8" />
        </svg>
      <% end %>
    <% end %>
  </div>
</div>

<%= javascript_include_tag "channels/chatbot_channel" %>

<script>
document.addEventListener("turbo:load", function() {
  const chatMessages = document.getElementById("chat-messages");
  const form = document.querySelector("form");

  form.addEventListener("submit", function(event) {
    event.preventDefault();
    const message = event.target.elements.message.value;

    addMessageToChat('user', message);
    event.target.elements.message.value = '';

    fetch('<%= send_message_path %>', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
      },
      body: JSON.stringify({ message: message })
    });
  });

  function addMessageToChat(sender, message) {
    const messageElement = document.createElement('div');
    messageElement.className = `flex ${sender === 'user' ? 'justify-end' : 'justify-start'}`;
    messageElement.innerHTML = `
      <div class="max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${sender === 'user' ? 'bg-teal-500 text-white' : 'bg-white bg-opacity-20 text-white'}">
        <p>${message}</p>
      </div>
    `;
    chatMessages.appendChild(messageElement);
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  App.chatbot = App.cable.subscriptions.create("ChatbotChannel", {
    received(data) {
      if (data.sender === 'llm') {
        if (!data.is_last) {
          addMessageToChat('llm', data.message);
        }
      }
    }
  });
});
</script>
